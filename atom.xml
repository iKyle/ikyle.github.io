<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[kyle's blog]]></title>
  <link href="http://cnkyle.com/atom.xml" rel="self"/>
  <link href="http://cnkyle.com/"/>
  <updated>2014-07-05T18:46:32+08:00</updated>
  <id>http://cnkyle.com/</id>
  <author>
    <name><![CDATA[kylewu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Instrument之time Profiler]]></title>
    <link href="http://cnkyle.com/blog/2014/07/05/instrumentzhi-time-profiler/"/>
    <updated>2014-07-05T18:31:36+08:00</updated>
    <id>http://cnkyle.com/blog/2014/07/05/instrumentzhi-time-profiler</id>
    <content type="html"><![CDATA[<p>一直断断续续的学习instrument，没有整理相关的经验与资料，久而久之就慢慢忘记了，所以今天就静下心来整理一下time profiler相关的资料。</p>

<!--more-->


<h2>如何启动</h2>

<blockquote><p>已知晓者可略过直接进入&lt;界面介绍></p></blockquote>

<p>time profiler的启动分为真机抓包、代码profile这两种方式，如果需要更接近真实数据建议使用低配置一点的机器使用真机抓包，这样误差会更少些。</p>

<h4>1、真机抓取</h4>

<p>真机抓包的前提是手机要有证书，并且能够通过Instrument run起APP，否则是抓不到任何数据包的。如何确实是run不了真机的APP，那可以略过这节直接进入代码层面的profile。</p>

<p>右击XCode图标，如下选择：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_1.png" alt="Instrument的启动" /></p>

<p>打开之后双击Time Profiler即可打开：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_2.png" alt="打开Time Profiler" /></p>

<p>打开之后选择你需要连接的APP即可抓包：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_3.png" alt="抓包" /></p>

<h4>2、代码profile</h4>

<p>这个方法抓包的到数据不一定真实，因为是使用模拟器来抓包，如果只是想要个大概的数据，这种方法也是一种不错的选择。</p>

<p>启动XCode，选择菜单Product &ndash;> Profile：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_4.png" alt="Instrument的启动" /></p>

<p>Instrument启动之后会弹出一个如上的选择界面，双击Time Profiler即可。</p>

<h2>界面介绍</h2>

<blockquote><p>如果您对time profiler的主界面了如指掌，可直接进入&lt;使用技巧></p></blockquote>

<p>下图是一般使用到的视图都打开的界面，如跟您的不一样请不要吃惊，可通过设置开启一样的界面：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_5.png" alt="主界面" /></p>

<p>下面我们就对主界面的几个重点区域分别介绍：</p>

<h4>1、设置关注时间段</h4>

<p>通过设置开始、设置结束、清除设置来查看您所关心的范围的数据：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_6.png" alt="主界面" /></p>

<h4>2、运行记录</h4>

<p>可查看多次运行的数据，进行可视化对比：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_7.png" alt="运行记录" /></p>

<h4>3、视图开关</h4>

<p>分别为三个视图的开关，全部选上可达到主界面截图效果。</p>

<h4>4、Liabrary</h4>

<p>用于添加其它数据抓取工具，需要添加直接将liabrary内的图标拖到左边的Instruments列中。</p>

<h4>5、搜索条</h4>

<p>如果您需要快速查找具体的类或函数，可在些输入类名或者函数名，会有意想不到的效果。</p>

<h4>6、数据可视化面板</h4>

<p>可在此设置您需要关注的范围，以便将不相干的内容过滤掉。</p>

<h4>7、相关内容扩展详情面板</h4>

<h4>8、选项面板</h4>

<p>这个会在使用技巧中提到如果使用。</p>

<h4>9、详情面板</h4>

<p>在time profiler下主要是看Call Tree和Sample List这两种视图：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_8.png" alt="视图介绍" /></p>

<p><strong>调用树（Call Tree）</strong></p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_9.png" alt="视图介绍" /></p>

<ul>
<li>Running Time：函数运行的时间，这个时间是累积时间</li>
<li>Self：在栈顶次数</li>
<li>Symbol Name：被调用函数的符号信息</li>
</ul>


<p>从详情面板Call Tree与相关内容扩展详情面板对应的关系图：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_10.png" alt="详情面板对应关系图" /></p>

<p>详情面板更多的信息选项（由于本人还未对此做深入研究，所以还不懂它们的作用）：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_11.png" alt="详情面板对应关系图" /></p>

<p><strong>样本列表（Sample List）</strong></p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_12.png" alt="视图介绍" /></p>

<ul>
<li>Timestamp：采样的开始时间</li>
<li>Dep：堆栈深度</li>
<li>CPU：线程运行在那一个CPU上</li>
<li>Process：进程名称</li>
<li>Thread：所在的线程名称</li>
<li>Hot Frame：采样中调用最多的函数</li>
<li>Responsible Library：调用该函数的库</li>
<li>Responsible Caller：调用该函数的函数</li>
</ul>


<h2>使用技巧</h2>

<blockquote><p>技巧收集点比较乱，都是些在使用中发现的。如您有更好的请麻烦也告知我，大家一起进步成长熟练。</p></blockquote>

<h4>1、快速展开/折叠调用栈</h4>

<p>如您不想一级一级的展开调用栈，可如下操作一次全部展开或者折叠。</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_13.png" alt="视图介绍" /></p>

<h4>2、比较两次run的差异</h4>

<p>如您想将多次run的结果进行差异对比，可如下操作：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_14.png" alt="run差异比较" /></p>

<h4>3、过滤</h4>

<p>3.1、按着option键在主界面6中通过拖动鼠标来选择需要过滤的时间段。</p>

<p>3.2、Command+F查找过滤的函数名或者类名。</p>

<p>3.3、Call Tree过滤，在主界面8中直接选择：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_15.png" alt="Call Tree过滤" /></p>

<ul>
<li>Separate byt Thread（建议选择）：通过线程分类来查看那些纯种占用CPU最多。</li>
<li>Invert Call Tree（不建议选择）：调用树倒返过来，将习惯性的从根向下一级一级的显示，如选上就会返过来从最底层调用向一级一级的显示。如果想要查看那个方法调用为最深时使用会更方便些。</li>
<li>Hide Missing Symbols（建议选择）：隐藏丢失的符号，比如应用或者系统的dSYM文件找不到的话，在详情面板上是看不到方法名的，只能看一些读不明的十六进值，所以对我们来说是没有意义的，去掉了会使阅读更清楚些。</li>
<li>Hide System Libraries（建议选择）：选上它只会展示与应用有关的符号信息，一般情况下我们只关心自己写的代码所需的耗时，而不关心系统库的CPU耗时。</li>
<li>Show Obj-C Only（建议选择）：选上它只会展示Objective-C methods，C和C++的函数是不会展示的，不过如果您的应用有写C和C++的代码时也想要查看这些代码的耗时，那就建议不要选择上。</li>
<li>Flatten Recursion（一般不选）：选上它会将调用栈里递归函数作为一个入口。</li>
<li>Top Functions（一般不选）：选上它会将最耗时的函数降序排列，而这种耗时是累加的，比如A调用了B，那么A的耗时数是会包含B的耗时数。</li>
</ul>


<p>3.4、Call Tree Constraints过滤</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_18.png" alt="Call Tree Constraints过滤" /></p>

<ul>
<li>Count：设置调用的次数。</li>
<li>Time (ms)：设置耗时范围。</li>
</ul>


<h4>4、关联代码</h4>

<p>例如我想要查看setBackgroundColo这个函数的代码处，可以直接双击它就会跳转到关联的代码段。</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_16.png" alt="关联代码" /></p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_17.png" alt="关联代码" /></p>

<p>跳转到的代码段可看到提示这里有100%的耗时。</p>

<h4>5、数据录制模式</h4>

<p>如上面介绍的都是使用实时模式，其实还有另一种模式是延时模式，它们的区别在乎：</p>

<ul>
<li>实时模式：这是一个默认模式，因为它是实时的所以Instrument和应用是使用同一块CPU，自然也会对CPU是一种耗时，所以抓得到的数据是会有所影响，但官方苹果表示这个影响不会很大。</li>
<li>延时模式：这个模式会更小化对数据影响，当您在录制时这种模式会禁掉Instrument的实时动态刷新效果，直接到录制完成才会将数据显示出来。</li>
</ul>


<p>模式切换如下：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_19.png" alt="模式切换" /></p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_20.png" alt="模式切换" /></p>

<p>当选择了延时模式抓数据时，您是看不到任何Instrument给你提供的信息，只能等你抓包结束之后才会显示出来：</p>

<p><img src="http://cnkyle.qiniudn.com/Instrument%E4%B9%8Btime%20profiler20140703_21.png" alt="模式切换" /></p>
 <p class="meta"> 
  

<span class="byline author vcard">Posted by <span class="fn">kylewu</span></span>
 








  


<time datetime="2014-07-05T18:31:36+08:00" pubdate data-updated="true">Jul 5<span>th</span>, 2014</time> 

<span class="categories">
  
    <a class='category' href='/blog/categories/ios/'>iOS</a>
  
</span>

 </p> <p class="meta"> 原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh" id="">Creative Commons BY-NC-ND 3.0</a>
 </p>]]></content>
  </entry>
  
</feed>
